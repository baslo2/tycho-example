name: Release Workflow

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  test:
    runs-on: macos-latest
    steps:
      - name: checkout test
        uses: actions/checkout@v4
      - name: Set env
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/} | cut -c 2-" >> $GITHUB_ENV
      - name: Test
        run: echo $RELEASE_VERSION

  build:
    runs-on: macos-latest
    steps:
    # - name: Decode keystore
    #   env:
    #      KEYSTORE: ${{ secrets.TEST_JKS_2 }}
    #   run: |
    #         echo "convert key base64 string to file"
    #         echo "KEYSTORE" >> key.jks.base64
    #         base64 --decode -i key.jks.base64 -o /tmp/key.jks
    #         ls /tmp/

    - name: checkout
      uses: actions/checkout@v4
    - name: List files in the repository
      run: |
          ls ${{ github.workspace }}
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'adopt'
        java-version: '21'
    
    # - name: Create keystore
    #   uses: 1arp/create-a-file-action@0.4.5
    #   with:
    #     path: test
    #     isAbsolutePath: false
    #     file: key.jks
    #     content: ${{ secrets.TEST_REAL_JKS }}
      # run: keytool -genkeypair -alias tjs -keyalg RSA -keysize 2048 -validity 365 -keystore /tmp/key.jks -storepass 123456 -keypass 123456 -dname "CN=MyApp, OU=Development, O=MyCompany, L=City, ST=State, C=Country"

    # - name: check jks location
    #   run: ls test


    - name: create temp key
      uses: 1arp/create-a-file-action@0.4.5
      with:
        path: keystore
        isAbsolutePath: false
        file: key.txt
        content: ${{ secrets.KEY_JKS_BASE_64 }}
    - name: check workspace 
      run: ls ${{ github.workspace }}/keystore
    - name: decode keystore
      run: base64 --decode -i keystore/key.txt -o keystore/key.jks
    - name: check jks loc
      run: ls ${{ github.workspace }}/keystore
    - name: build
      env:
        KEYSTORE: ${{ secrets.TEST_REAL_JKS }}
      run: |
            ls /Users/runner/work/tycho-example/tycho-example/
            echo "--------------------------------"
            echo "create temp dirs for jre"
            mkdir ${{ github.workspace }}/jre
            cd jre
            mkdir x86
            mkdir aarch64
            cd
            echo "----------------------------------"
            echo "download jre"
            curl -L -o ${{ github.workspace }}/jre/x86/jre.tar.gz https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.14%2B7/OpenJDK17U-jre_x64_mac_hotspot_17.0.14_7.tar.gz
            echo "download finished"
            echo "----------------------------------"
            echo "extract archive"
            tar -xzf ${{ github.workspace }}/jre/x86/jre.tar.gz -C ${{ github.workspace }}/jre/x86/
            echo "extract finished"
            echo "-------------------------------------"
            echo "rename directory"
            mv ${{ github.workspace }}/jre/x86/jdk-17.0.14+7-jre ${{ github.workspace }}/jre/x86/jre
            echo "rename finished"
            echo "------------------------------------"
            echo "list jre loc"
            ls ${{ github.workspace }}/jre/x86
            echo "--------------------------------------"
            cd ${{ github.workspace }}
            mvn verify -DskipTests
            echo "--------------------------------------"
            echo "list macos build"
            ls ${{ github.workspace }}/releng/com.vogella.tycho.product/target/products/com.vogella.tycho.product/macosx/cocoa/x86_64/Eclipse.app/Contents/Eclipse


    - name: List files in the repository after build
      run: |
          ls ${{ github.workspace }}
          echo "--------------------------------------"
          echo "list macos build"
          ls ${{ github.workspace }}/releng/com.vogella.tycho.product/target/products/com.vogella.tycho.product/macosx/cocoa/x86_64/Eclipse.app/Contents/Eclipse


    # - name: Create keystore
    #   uses: 1arp/create-a-file-action@0.4.5
    #   with:
    #       path: test
    #       isAbsolutePath: false
    #       file: test.txt
    #       content: ${{ secrets.MAC_CER_BASE_64 }}

    # - name: check Keychains
    #   run: ls /Library/Keychains

    # - name: Install Apple Certificate
    #   env:
    #     CERTIFICATE_P12: ${{ secrets.MAC_CERT_BASE_64 }}
    #     CERTIFICATE_PASSWORD: ${{ secrets.MAC_CERT_PASS }}
    #   run: |
    #     echo "decode"
    #     base64 --decode -i /Users/runner/work/tycho-example/tycho-example/test/test.txt -o /Users/runner/work/tycho-example/tycho-example/test/test.cer
    #     echo "check cert"
    #     ls
    #     echo "create"
    #     security create-keychain -p "" /tmp/Keychains/build.keychain
    #     echo "chek loc"
    #     ls /tmp/Keychains
    #     echo "set default"
    #     security default-keychain -s /tmp/Keychains/build.keychain
    #     echo "check default keychain"
    #     security list-keychains -d user
    #     echo "unlock"
    #     security unlock-keychain -p "" /tmp/Keychains/build.keychain
    #     echo "import"
    #     security import /Users/runner/work/tycho-example/tycho-example/test/test.cer -k /tmp/Keychains/build.keychain -T /usr/bin/codesign
    #     echo "check aaded sert"
    #     security find-identity -p codesigning /private/tmp/Keychains/build.keychain
        

    # - name: some other chek loc
    #   run: ls /tmp/Keychains


        # echo "set-key-part-list"
        # security set-key-partition-list -S apple-tool:,apple: -s -k "" /private/tmp/Keychains/build.keychain

    # -P "$CERTIFICATE_PASSWORD" -T /usr/bin/codesign

    # - name: check sum
    #   run: openssl sha1 test2.p12

    # - name: check added cert
    #   run: security find-identity -p codesigning /tmp/Keychains/build.keychain
      
    # - name: check added cert
    #   run: security find-identity -p codesigning /Library/Keychains/System.keychain

    # - name: mac sign
    #   run: codesign --deep --force --verify --keychain /tmp/Keychains/build.keychain --verbose --sign test /Users/runner/work/tycho-example/tycho-example/releng/com.vogella.tycho.product/target/products/com.vogella.tycho.product/macosx/cocoa/x86_64/Eclipse.app
      
    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Токен для доступа к GitHub API
      with:
        tag_name: ${{ env.RELEASE_VERSION }}
        release_name: Release ${{ env.RELEASE_VERSION }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}  # URL для загрузки артефактов
        asset_path: ${{ github.workspace }}/releng/com.vogella.tycho.product/target/products/com.vogella.tycho.product-linux.gtk.x86_64.tar.gz  # Путь к файлу, который нужно загрузить
        asset_name: com.vogella.tycho.product-linux.gtk.x86_64.tar.gz  # Имя файла в релизе
        asset_content_type: application/zip
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}  # URL для загрузки артефактов
        asset_path: ${{ github.workspace }}/releng/com.vogella.tycho.product/target/products/com.vogella.tycho.product-macosx.cocoa.x86_64.tar.gz
        asset_name: com.vogella.tycho.product-macosx.cocoa.x86_64.tar.gz  # Имя файла в релизе
        asset_content_type: application/zip
        
    - name: List files in the repository after build
      run: |
          ls /Users/runner/work/tycho-example/tycho-example/releng/com.vogella.tycho.product/target/products
          
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}  # URL для загрузки артефактов
        asset_path: ${{ github.workspace }}/releng/com.vogella.tycho.product/target/products/com.vogella.tycho.product-win32.win32.x86_64.zip  # Путь к файлу, который нужно загрузить
        asset_name: com.vogella.tycho.product-win32.win32.x86_64.zip  # Имя файла в релизе
        asset_content_type: application/zip



        
    # - name: Upload build artifacts
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: relese-assets
    #     path: /Users/runner/work/tycho-example/tycho-example/releng/com.vogella.tycho.product/target/products/com.vogella.tycho.product-linux.gtk.x86_64.tar.gz
    # - name: Upload build artifacts
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: relese-assets
    #     path: /Users/runner/work/tycho-example/tycho-example/releng/com.vogella.tycho.product/target/products/com.vogella.tycho.product-macosx.cocoa.x86_64.tar.gz
    # - name: Upload build artifacts
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: relese-assets  
    #     path: /Users/runner/work/tycho-example/tycho-example/releng/com.vogella.tycho.product/target/products/com.vogella.tycho.product-win32.win32.x86_64.zip
    
  # create-release:
  #   runs-on: macos-latest
  #   needs: build
  #   steps:

  #     - name: Set env
  #       run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
  #     - name: Create GitHub Release
  #       id: create_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Токен для доступа к GitHub API
  #       with:
  #         tag_name: ${{ env.RELEASE_VERSION }}
  #         release_name: Release ${{ env.RELEASE_VERSION }}
  #         draft: false
  #         prerelease: false

  #     - name: Upload Release Asset
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}  # URL для загрузки артефактов
  #         asset_path: /Users/runner/work/tycho-example/tycho-example/releng/com.vogella.tycho.product/target/products/com.vogella.tycho.product-linux.gtk.x86_64.tar.gz  # Путь к файлу, который нужно загрузить
  #         asset_name: com.vogella.tycho.product-linux.gtk.x86_64.tar.gz  # Имя файла в релизе
  #         asset_content_type: application/zip
